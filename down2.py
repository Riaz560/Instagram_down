import streamlit as st
import instaloader
import os
import shutil
import tempfile

def download_reel(reel_url):
    try:
        # Extract shortcode from URL
        if "/reel/" in reel_url:
            shortcode = reel_url.split("/reel/")[-1].split("/")[0]
        elif "/p/" in reel_url:
            shortcode = reel_url.split("/p/")[-1].split("/")[0]
        else:
            return None, "Invalid Instagram Reel URL"

        # Initialize Instaloader
        loader = instaloader.Instaloader()

        # Fetch the Reel
        post = instaloader.Post.from_shortcode(loader.context, shortcode)

        # Create a temporary directory to download the reel
        with tempfile.TemporaryDirectory() as temp_dir:
            # Download the Reel to the temporary directory
            loader.download_post(post, target=temp_dir)

            # Find the MP4 file
            mp4_file = None
            for filename in os.listdir(temp_dir):
                if filename.endswith(".mp4"):
                    mp4_file = os.path.join(temp_dir, filename)
                    break

            if mp4_file:
                # Read the MP4 file as binary
                with open(mp4_file, 'rb') as f:
                    video_data = f.read()
                
                return video_data, f"reel_{shortcode}.mp4"
            else:
                return None, "MP4 file not found"

    except Exception as e:
        return None, f"Error: {str(e)}"

# Streamlit UI
st.set_page_config(
    page_title="Instagram Reel Downloader",
    page_icon="üì•",
    layout="centered"
)

st.title("üì• Instagram Reel Downloader")
st.markdown("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶ø Instagram Reel ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§")

# Input for Instagram Reel URL
reel_url = st.text_input("Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:", placeholder="https://www.instagram.com/reel/CrVqIBOAeeq/")

if st.button("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®"):
    if reel_url:
        with st.spinner("‡¶∞‡¶ø‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®"):
            video_data, filename = download_reel(reel_url)
            
            if video_data:
                st.success("‡¶∞‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!")
                
                # Download button
                st.download_button(
                    label="‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
                    data=video_data,
                    file_name=filename,
                    mime="video/mp4"
                )
            else:
                st.error(filename)  # error message
    else:
        st.warning("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§")

st.markdown("---")
st.markdown("**‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:**")
st.markdown("1. Instagram ‡¶è ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∞‡¶ø‡¶≤ ‡¶ñ‡ßÅ‡¶≤‡ßÅ‡¶®")
st.markdown("2. URL ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï)")
st.markdown("3. ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ï‡ßç‡¶∏‡ßá ‡¶™‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®")
st.markdown("4. '‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®' ‡¶¨‡¶æ‡¶ü‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®")

# Footer
st.markdown("---")
st.caption("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§ Instagram ‡¶è‡¶∞ terms of service ‡¶Æ‡ßá‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®„ÄÇ")            return None, "Video URL not found in the page"
            
    except Exception as e:
        return None, f"Error: {str(e)}"

def download_video_from_url(video_url):
    """Download video from direct URL"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        
        response = requests.get(video_url, headers=headers, stream=True)
        response.raise_for_status()
        
        return response.content, None
        
    except Exception as e:
        return None, f"Download error: {str(e)}"

# Streamlit UI
st.set_page_config(
    page_title="Instagram Reel Downloader",
    page_icon="üì•",
    layout="centered"
)

st.title("üì• Instagram Reel Downloader")

method = st.radio("Select download method:", ["Instaloader (Recommended)", "Alternative Method"])

reel_url = st.text_input("Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:", placeholder="https://www.instagram.com/reel/CrVqIBOAeeq/")

if st.button("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®"):
    if reel_url:
        with st.spinner("‡¶∞‡¶ø‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá..."):
            if method == "Instaloader (Recommended)":
                video_data, filename = download_reel(reel_url)
            else:
                video_url, filename = extract_video_url(reel_url)
                if video_url:
                    video_data, error = download_video_from_url(video_url)
                    if error:
                        st.error(error)
                else:
                    video_data = None
                    st.error(filename)
            
            if video_data:
                st.success("‡¶∞‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!")
                st.download_button(
                    label="‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
                    data=video_data,
                    file_name=filename,
                    mime="video/mp4"
                )
            else:
                st.error("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
    else:
        st.warning("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§")        # Create a temporary directory to download the reel
        with tempfile.TemporaryDirectory() as temp_dir:
            # Download the Reel to the temporary directory
            try:
                loader.download_post(post, target=temp_dir)
            except Exception as e:
                return None, f"Download failed: {str(e)}"

            # Find the MP4 file
            mp4_file = None
            for filename in os.listdir(temp_dir):
                if filename.endswith(".mp4"):
                    mp4_file = os.path.join(temp_dir, filename)
                    break

            if mp4_file:
                # Read the MP4 file as binary
                with open(mp4_file, 'rb') as f:
                    video_data = f.read()
                
                return video_data, f"reel_{shortcode}.mp4"
            else:
                return None, "MP4 file not found. This might be a private account or the content is not accessible."

    except Exception as e:
        return None, f"Error: {str(e)}"

# Streamlit UI
st.set_page_config(
    page_title="Instagram Reel Downloader",
    page_icon="üì•",
    layout="centered"
)

st.title("üì• Instagram Reel Downloader")
st.markdown("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶ø Instagram Reel ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§")

# Warning about limitations
st.warning("""
**Note:** Instagram sometimes blocks automated requests. 
If you get an error, please wait a few minutes and try again.
Private accounts cannot be downloaded.
""")

# Input for Instagram Reel URL
reel_url = st.text_input("Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:", placeholder="https://www.instagram.com/reel/CrVqIBOAeeq/")

if st.button("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®"):
    if reel_url:
        with st.spinner("‡¶∞‡¶ø‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶è‡¶ü‡¶ø ‡ßß‡ß¶-‡ß©‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶®‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá)"):
            video_data, filename = download_reel(reel_url)
            
            if video_data:
                st.success("‡¶∞‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!")
                
                # Download button
                st.download_button(
                    label="‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
                    data=video_data,
                    file_name=filename,
                    mime="video/mp4"
                )
            else:
                st.error(filename)
    else:
        st.warning("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®„ÄÇ")

st.markdown("---")
st.markdown("**‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:**")
st.markdown("1. Instagram ‡¶è ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∞‡¶ø‡¶≤ ‡¶ñ‡ßÅ‡¶≤‡ßÅ‡¶®")
st.markdown("2. URL ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï)")
st.markdown("3. ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ï‡ßç‡¶∏‡ßá ‡¶™‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®")
st.markdown("4. '‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®' ‡¶¨‡¶æ‡¶ü‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®")

# Footer
st.markdown("---")
st.caption("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§ Instagram ‡¶è‡¶∞ terms of service ‡¶Æ‡ßá‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")                with open(mp4_file, 'rb') as f:
                    video_data = f.read()
                
                return video_data, f"reel_{shortcode}.mp4"
            else:
                return None, "MP4 file not found"

    except Exception as e:
        return None, f"Error: {str(e)}"

# Streamlit UI
st.set_page_config(
    page_title="Instagram Reel Downloader",
    page_icon="üì•",
    layout="centered"
)

st.title("üì• Instagram Reel Downloader")
st.markdown("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶ø Instagram Reel ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§")

# Input for Instagram Reel URL
reel_url = st.text_input("Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:", placeholder="https://www.instagram.com/reel/CrVqIBOAeeq/")

if st.button("‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®"):
    if reel_url:
        with st.spinner("‡¶∞‡¶ø‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®"):
            video_data, filename = download_reel(reel_url)
            
            if video_data:
                st.success("‡¶∞‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!")
                
                # Download button
                st.download_button(
                    label="‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
                    data=video_data,
                    file_name=filename,
                    mime="video/mp4"
                )
            else:
                st.error(filename)  # error message
    else:
        st.warning("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß Instagram Reel URL ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§")

st.markdown("---")
st.markdown("**‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:**")
st.markdown("1. Instagram ‡¶è ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∞‡¶ø‡¶≤ ‡¶ñ‡ßÅ‡¶≤‡ßÅ‡¶®")
st.markdown("2. URL ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï)")
st.markdown("3. ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ï‡ßç‡¶∏‡ßá ‡¶™‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®")
st.markdown("4. '‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®' ‡¶¨‡¶æ‡¶ü‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®")

# Footer
st.markdown("---")
st.caption("‡¶è‡¶á ‡¶ü‡ßÅ‡¶≤‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§ Instagram ‡¶è‡¶∞ terms of service ‡¶Æ‡ßá‡¶®‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®„ÄÇ")
